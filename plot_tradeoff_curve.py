# File Name: plot_tradeoff_curve
# Author: Khang Vo
# Date Created: 2/15/2023
# Date Last Modified: 3/12/2023
# Python Version: 3.10

import os
import glob
import time

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
from scipy.interpolate import Rbf
from mpl_toolkits.basemap import Basemap
from sklearn import preprocessing


def main():
    # # Regional Data
    # d2 = [1, 3, 5, 7, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    #
    # # X-AXIS
    # abs_mean = [0.6843, 0.9293, 1.0882, 1.1973, 1.2720, 1.3002, 1.4289, 1.4639, 1.4777, 1.4843, 1.4880, 1.4903, 1.4917, 1.4928, 1.4935]
    # abs_var = [3.8595, 4.8591, 5.2157, 5.4032, 5.5174, 5.5589, 5.7475, 5.8028, 5.8256, 5.8371, 5.8436, 5.8475, 5.8502, 5.8519, 5.8532]
    # abs_ct_rms = [1.5303, 1.7951, 1.9278, 2.0141, 2.0728, 2.0950, 2.1982, 2.2272, 2.2387, 2.2443, 2.2475, 2.2494, 2.2506, 2.2515, 2.2521]
    #
    # # Y-AXIS
    # acond = [290.7, 64.3, 32.2, 21.8, 21.9, 23.4, 28.6, 40.4, 47.2, 56.2, 63.2, 72.6, 82.1, 91.7, 101.3]
    # anorm = [135.0, 84.3, 69.1, 64.4, 66.0, 69.1, 88.8, 122.9, 149.3, 181.3, 206.4, 238.6, 270.9, 303.5, 336.2]
    # arnorm = [39.4, 29.7, 24.3, 16.9, 25.3, 15.7, 43.3, 16.0, 38.2, 54.2, 104.8, 86.3, 82.9, 83.1, 84.7]
    # xnorm = [127894.4, 55573.7, 38628.8, 31740.7, 29241.4, 28805.0, 30287.6, 31578.8, 32173.2, 32479.0, 32654.3, 32763.0, 32835.1, 32884.7, 32920.7]
    # mod_rms = [495.2101, 186.2429, 118.5302, 83.12157, 61.22639, 53.28472, 18.92830, 10.49559, 7.785807, 6.801330, 6.404452, 6.227751, 6.141984, 6.097305, 6.072718]
    #
    # abs_var_norm = [0.17955362278342712, 0.2260575225979921, 0.24264744924252385, 0.2513704196459161, 0.2566832901529423, 0.2586139742688931, 0.26738811943198526, 0.2699608141696258, 0.2710215273706783, 0.27155653622208636, 0.27185893252940396, 0.2720403703137945, 0.27216598108760337, 0.2722450693525941, 0.27230554861405765]
    # mod_rms_norm = [0.8919694966787324, 0.33545960749384446, 0.21349589363227744, 0.14971807916689506, 0.11028061073826195, 0.09597612180984835, 0.03409354175931398, 0.018904594493622678, 0.014023749416717775, 0.01225051527997099, 0.011535660978932176, 0.011217388185157112, 0.01106290517315545, 0.010982429623197747, 0.010938143664541329]

    # Master Data
    d2 = [1, 3, 5, 7, 9, 10, 20, 30, 40, 50]

    # X-AXIS
    # abs_var = [5.0568, 6.1367, 6.5347, 6.7527, 6.8904, 6.9412, 7.1815, 7.2548, 7.2855, 7.3008]
    abs_var_norm = [0.23634663, 0.2868194,  0.30542128, 0.31561024, 0.32204612, 0.32442043, 0.33565166, 0.33907758, 0.34051245, 0.34122755]

    # Y-AXIS
    # mod_rms = [540.2050, 189.8898, 118.7253, 83.36409, 61.73094, 53.87112, 19.40611, 10.70450, 7.842097, 6.781178]
    mod_rms_norm = [0.90508528, 0.31815045, 0.19891804, 0.13967218, 0.10342697, 0.09025825, 0.03251392, 0.01793483, 0.01313902, 0.01136151]

    # create main plot
    fig, ax = plt.subplots(figsize=(19, 9))

    ax.plot(mod_rms_norm, abs_var_norm, "--o", color="black")
    # ax.plot(preprocessing.normalize([mod_rms]), preprocessing.normalize([abs_var]), "--o", color="black")

    ax.set_title("Tradeoff Curve")
    ax.set_xlabel("Model rms")
    ax.set_xscale("log")
    ax.set_ylabel("Absolute Variance")
    # ax.set_yscale("log")

    for i, txt in enumerate(d2):
        ax.annotate(txt, (mod_rms_norm[i], abs_var_norm[i]), textcoords="offset points", xytext=(10, 0), ha="left")

    plt.show()


# run main()
if __name__ == "__main__":
    main()
